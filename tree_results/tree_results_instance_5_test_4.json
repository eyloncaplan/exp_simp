{
    "problem_instance": {
        "examples": [
            {
                "expression1": "1/(1/x + 1/y + 1/z)",
                "expression2": "(xyz)/(xy + xz + yz)",
                "result": "passed"
            },
            {
                "expression1": "1/(1/a + 1/b + 1/c)",
                "expression2": "(abc)/(ab + ac + bc)",
                "result": "passed"
            },
            {
                "expression1": "1/(1/x^{1/2} + 1/y^{1/2})",
                "expression2": "(x^{1/2}y^{1/2})/(x^{1/2} + y^{1/2})",
                "result": "passed"
            },
            {
                "expression1": "1/(1/a^{1/3} + 1/b^{1/3})",
                "expression2": "(a^{1/3}b^{1/3})/(a^{1/3} + b^{1/3})",
                "result": "passed"
            },
            {
                "expression1": "1/(1/x^{3/2} + 1/y^{3/2})",
                "expression2": "(x^{3/2}y^{3/2})/(x^{3/2} + y^{3/2})",
                "result": "passed"
            }
        ],
        "description": "Keep expressions rationalized/Expand out complex fractions\n1/(1/x^{3/2} + 1/y^{3/2}) -> (x^{3/2}y^{3/2})/(x^{3/2} + y^{3/2})"
    },
    "test_index": 4,
    "branching_factor": 5,
    "tree": {
        "null": [
            "1/(1/x^{3/2} + 1/y^{3/2})"
        ],
        "1/(1/x^{3/2} + 1/y^{3/2})": [
            "1/((y^{3/2}+x^{3/2})/(x^{3/2}y^{3/2}))",
            "1/(y^{3/2}+x^{3/2})*(x^{3/2}*y^{3/2})",
            "1/(y^{3/2}/(x^{3/2}y^{3/2})+x^{3/2}/(x^{3/2}y^{3/2}))"
        ],
        "1/((y^{3/2}+x^{3/2})/(x^{3/2}y^{3/2}))": [
            "(x^{3/2}y^{3/2})/(y^{3/2}+x^{3/2})",
            "1/(y^{3/2}+x^{3/2})*(x^{3/2}y^{3/2})",
            "1*(x^{3/2}y^{3/2})/(y^{3/2}+x^{3/2})"
        ],
        "1/(y^{3/2}+x^{3/2})*(x^{3/2}*y^{3/2})": [
            "(x^{3/2}*y^{3/2})/(y^{3/2}+x^{3/2})",
            "x^{3/2}*y^{3/2}/(y^{3/2}+x^{3/2})"
        ],
        "(x^{3/2}y^{3/2})/(y^{3/2}+x^{3/2})": [
            "(x^{3/2}y^{3/2})/((y^{3/2}+x^{3/2})*(y^{3/2}/y^{3/2}))"
        ]
    },
    "scores": {
        "1/(1/x^{3/2} + 1/y^{3/2})": [
            1,
            1
        ],
        "1/((y^{3/2}+x^{3/2})/(x^{3/2}y^{3/2}))": [
            2,
            4
        ],
        "1/(y^{3/2}+x^{3/2})*(x^{3/2}*y^{3/2})": [
            5,
            4
        ],
        "1/(y^{3/2}/(x^{3/2}y^{3/2})+x^{3/2}/(x^{3/2}y^{3/2}))": [
            2,
            3
        ],
        "(x^{3/2}y^{3/2})/(y^{3/2}+x^{3/2})": [
            5,
            2
        ],
        "1/(y^{3/2}+x^{3/2})*(x^{3/2}y^{3/2})": [
            2,
            3
        ],
        "1*(x^{3/2}y^{3/2})/(y^{3/2}+x^{3/2})": [
            4,
            2
        ],
        "(x^{3/2}*y^{3/2})/(y^{3/2}+x^{3/2})": [
            5,
            3
        ],
        "x^{3/2}*y^{3/2}/(y^{3/2}+x^{3/2})": [
            4,
            3
        ],
        "(x^{3/2}y^{3/2})/((y^{3/2}+x^{3/2})*(y^{3/2}/y^{3/2}))": [
            3,
            2
        ]
    },
    "averages": {
        "1/(1/x^{3/2} + 1/y^{3/2})": 1.0,
        "1/((y^{3/2}+x^{3/2})/(x^{3/2}y^{3/2}))": 3.0,
        "1/(y^{3/2}+x^{3/2})*(x^{3/2}*y^{3/2})": 4.5,
        "1/(y^{3/2}/(x^{3/2}y^{3/2})+x^{3/2}/(x^{3/2}y^{3/2}))": 2.5,
        "(x^{3/2}y^{3/2})/(y^{3/2}+x^{3/2})": 3.5,
        "1/(y^{3/2}+x^{3/2})*(x^{3/2}y^{3/2})": 2.5,
        "1*(x^{3/2}y^{3/2})/(y^{3/2}+x^{3/2})": 3.0,
        "(x^{3/2}*y^{3/2})/(y^{3/2}+x^{3/2})": 4.0,
        "x^{3/2}*y^{3/2}/(y^{3/2}+x^{3/2})": 3.5,
        "(x^{3/2}y^{3/2})/((y^{3/2}+x^{3/2})*(y^{3/2}/y^{3/2}))": 2.5
    },
    "tree_stats": {
        "total_nodes": 10,
        "max_pi_score": 5,
        "max_h_score": 4,
        "max_avg_score": 4.5,
        "average_pi_score": 3.3,
        "average_h_score": 2.7,
        "average_avg_score": 3.0,
        "max_depth": 3,
        "nodes_per_depth": {
            "0": 1,
            "1": 3,
            "2": 5,
            "3": 1
        },
        "average_score_per_depth": {
            "0": 1.0,
            "1": 3.3333333333333335,
            "2": 3.3,
            "3": 2.5
        },
        "average_pi_score_per_depth": {
            "0": 1.0,
            "1": 3.0,
            "2": 4.0,
            "3": 3.0
        },
        "average_h_score_per_depth": {
            "0": 1.0,
            "1": 3.6666666666666665,
            "2": 2.6,
            "3": 2.0
        }
    }
}