{
    "problem_instance": {
        "examples": [
            {
                "expression1": "1/(1/x + 1/y + 1/z)",
                "expression2": "(xyz)/(xy + xz + yz)",
                "result": "passed"
            },
            {
                "expression1": "1/(1/a + 1/b + 1/c)",
                "expression2": "(abc)/(ab + ac + bc)",
                "result": "passed"
            },
            {
                "expression1": "1/(1/x^{1/2} + 1/y^{1/2})",
                "expression2": "(x^{1/2}y^{1/2})/(x^{1/2} + y^{1/2})",
                "result": "passed"
            },
            {
                "expression1": "1/(1/a^{1/3} + 1/b^{1/3})",
                "expression2": "(a^{1/3}b^{1/3})/(a^{1/3} + b^{1/3})",
                "result": "passed"
            },
            {
                "expression1": "1/(1/x^{3/2} + 1/y^{3/2})",
                "expression2": "(x^{3/2}y^{3/2})/(x^{3/2} + y^{3/2})",
                "result": "passed"
            }
        ],
        "description": "Keep expressions rationalized/Expand out complex fractions\n1/(1/x + 1/y + 1/z) -> (xyz)/(xy + xz + yz)"
    },
    "test_index": 0,
    "branching_factor": 5,
    "tree": {
        "null": [
            "1/(1/x + 1/y + 1/z)"
        ],
        "1/(1/x + 1/y + 1/z)": [
            "1/(1/x+1/y+1/z)*(xyz)/(xyz)"
        ],
        "1/(1/x+1/y+1/z)*(xyz)/(xyz)": [
            "1/(1/x+1/y+1/z)*(xyz)/(xyz)*(xyz)/(xyz)"
        ]
    },
    "scores": {
        "1/(1/x + 1/y + 1/z)": [
            1,
            1
        ],
        "1/(1/x+1/y+1/z)*(xyz)/(xyz)": [
            2,
            2
        ],
        "1/(1/x+1/y+1/z)*(xyz)/(xyz)*(xyz)/(xyz)": [
            2,
            1
        ]
    },
    "averages": {
        "1/(1/x + 1/y + 1/z)": 1.0,
        "1/(1/x+1/y+1/z)*(xyz)/(xyz)": 2.0,
        "1/(1/x+1/y+1/z)*(xyz)/(xyz)*(xyz)/(xyz)": 1.5
    },
    "tree_stats": {
        "total_nodes": 3,
        "max_pi_score": 2,
        "max_h_score": 2,
        "max_avg_score": 2.0,
        "average_pi_score": 1.6666666666666667,
        "average_h_score": 1.3333333333333333,
        "average_avg_score": 1.5,
        "max_depth": 2,
        "nodes_per_depth": {
            "0": 1,
            "1": 1,
            "2": 1
        },
        "average_score_per_depth": {
            "0": 1.0,
            "1": 2.0,
            "2": 1.5
        },
        "average_pi_score_per_depth": {
            "0": 1.0,
            "1": 2.0,
            "2": 2.0
        },
        "average_h_score_per_depth": {
            "0": 1.0,
            "1": 2.0,
            "2": 1.0
        }
    }
}