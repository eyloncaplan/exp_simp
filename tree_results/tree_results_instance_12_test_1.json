{
    "problem_instance": {
        "examples": [
            {
                "expression1": "((x + 1)^2)/(x + 1)",
                "expression2": "x + 1",
                "result": "passed"
            },
            {
                "expression1": "((a + 2)^2)/(a + 2)",
                "expression2": "a + 2",
                "result": "passed"
            },
            {
                "expression1": "((x - 1)^2)/(x - 1)",
                "expression2": "x - 1",
                "result": "passed"
            },
            {
                "expression1": "((a + b)^2)/(a + b)",
                "expression2": "a + b",
                "result": "passed"
            },
            {
                "expression1": "((x - y)^2)/(x - y)",
                "expression2": "x - y",
                "result": "passed"
            }
        ],
        "description": "Reduce the number of parentheses/Keep expressions rationalized\n((a + 2)^2)/(a + 2) -> a + 2"
    },
    "test_index": 1,
    "branching_factor": 5,
    "tree": {
        "null": [
            "((a + 2)^2)/(a + 2)"
        ],
        "((a + 2)^2)/(a + 2)": [
            "(a+2)",
            "(a+2)^(2-1)"
        ],
        "(a+2)": [
            "(a+2)/1",
            "(a+2)*1"
        ],
        "(a+2)^(2-1)": [
            "(a+2)^(1)"
        ]
    },
    "scores": {
        "((a + 2)^2)/(a + 2)": [
            1,
            1
        ],
        "(a+2)": [
            4,
            2
        ],
        "(a+2)^(2-1)": [
            2,
            2
        ],
        "(a+2)/1": [
            1,
            3
        ],
        "(a+2)*1": [
            2,
            2
        ],
        "(a+2)^(1)": [
            2,
            2
        ]
    },
    "averages": {
        "((a + 2)^2)/(a + 2)": 1.0,
        "(a+2)": 3.0,
        "(a+2)^(2-1)": 2.0,
        "(a+2)/1": 2.0,
        "(a+2)*1": 2.0,
        "(a+2)^(1)": 2.0
    },
    "tree_stats": {
        "total_nodes": 6,
        "max_pi_score": 4,
        "max_h_score": 3,
        "max_avg_score": 3.0,
        "average_pi_score": 2.0,
        "average_h_score": 2.0,
        "average_avg_score": 2.0,
        "max_depth": 2,
        "nodes_per_depth": {
            "0": 1,
            "1": 2,
            "2": 3
        },
        "average_score_per_depth": {
            "0": 1.0,
            "1": 2.5,
            "2": 2.0
        },
        "average_pi_score_per_depth": {
            "0": 1.0,
            "1": 3.0,
            "2": 1.6666666666666667
        },
        "average_h_score_per_depth": {
            "0": 1.0,
            "1": 2.0,
            "2": 2.3333333333333335
        }
    }
}